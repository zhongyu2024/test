<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	<!-- ssm开发,依赖注解 -->
	<context:component-scan base-package="com.zy"/>
	
	<!-- 引入properties文件中的key所对应的value值 -->
	<context:property-placeholder location="classpath:dbconfig.properties"/>
	<!-- 配置数据源,c3p0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbcUrl}"/>
		<property name="driverClass" value="${driverClass}"></property>
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
		<property name="checkoutTimeout" value="${checkoutTimeout}"></property>
		<property name="initialPoolSize" value="${initialPoolSize}"></property>
		<property name="maxIdleTime" value="${maxIdleTime}"></property>
		<property name="maxPoolSize" value="${maxPoolSize}"></property>
		<property name="minPoolSize" value="${minPoolSize}"></property>
		<property name="maxStatements" value="${maxStatements}"></property>
	</bean>
	<!-- sqlSessionFactory 通过单例模式管理 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
		<property name="dataSource" ref="dataSource"/>
		<!-- mybatis的配置文件位置 -->
		<property name="configLocation" value="classpath:mybatis.xml"/>
	</bean>
	
	<!-- 配置mapper的映射文件 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 配置基础扫描的mapper接口所在的包  com.web.dao.mapper -->
		<property name="basePackage" value="com.zy.dao.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- 事务:声明式事务 -->
	<!-- 配置事务管理的对象transactionManager -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 配置事务的消息:配置事务的特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	
		<!-- 事务的传播属性 -->
		<tx:attributes>
			<!-- 在什么方法上加入什么样的事务
				name:方法名:方法名使用*通配
				
				propagation:事务传播属性
			 -->
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="modify*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="drop*" propagation="REQUIRED"/>
			<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="sub*" propagation="REQUIRED"/>
		</tx:attributes>
		
	</tx:advice>
	
	<!-- aop:将advice织入业务逻辑中 -->
	<aop:config>
		<!-- 切入点 -->
		<aop:pointcut expression="execution(* com.zy.service.*.*(..))" id="txcut"/>
		<!-- 事务的advice -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txcut"/>
	</aop:config>
	

	
	
</beans>